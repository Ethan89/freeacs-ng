cmake_minimum_required(VERSION 2.6)
PROJECT(freeacs-ng)
ADD_DEFINITIONS(-Wall -Werror --std=gnu99 -Wmissing-declarations)

OPTION(DUMMY_MODE "if enabled freeacs-ng will exit after serving first request" OFF)

IF(DUMMY_MODE)
	ADD_DEFINITIONS(-DDUMMY_MODE)
endif()

FILE(MAKE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/build/modules")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/bin)
SET(SOURCES
	src/amqp.c
	src/amqp.h
	src/config.c
	src/config.h
	src/freeacs-ng.c
	src/freeacs-ng.h
	src/xml.c
	src/xml.h
)

ADD_EXECUTABLE(freeacs-ng ${SOURCES})

FIND_PACKAGE(JSON-C REQUIRED)
INCLUDE_DIRECTORIES(${JSON-C_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(freeacs-ng ${JSON-C_LIBRARIES})

FIND_PACKAGE(LIBXML2 REQUIRED)
INCLUDE_DIRECTORIES(${LIBXML2_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(freeacs-ng ${LIBXML2_LIBRARIES})

FIND_PACKAGE(LIBEVENT2 REQUIRED)
INCLUDE_DIRECTORIES(${LIBEVENT2_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(freeacs-ng ${LIBEVENT2_LIBRARIES})

FIND_PACKAGE(RABBITMQ REQUIRED)
INCLUDE_DIRECTORIES(${RABBITMQ_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(freeacs-ng ${RABBITMQ_LIBRARIES})

FIND_PACKAGE(UCI REQUIRED)
INCLUDE_DIRECTORIES(${UCI_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(freeacs-ng ${UCI_LIBRARIES})

FIND_PACKAGE(LIBFREECWMP REQUIRED)
INCLUDE_DIRECTORIES(${LIBFREECWMP_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(freeacs-ng ${LIBFREECWMP_LIBRARIES})

FIND_PACKAGE(CSCGI REQUIRED)
INCLUDE_DIRECTORIES(${CSCGI_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(freeacs-ng ${CSCGI_LIBRARIES})

FIND_PACKAGE(CNETSTRING REQUIRED)
INCLUDE_DIRECTORIES(${CNETSTRING_INCLUDE_DIR})
TARGET_LINK_LIBRARIES(freeacs-ng ${CNETSTRING_LIBRARIES})
